apply plugin: 'kotlin-multiplatform'

if(SKIP_ANDROID != "true") {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'androidx.navigation.safeargs.kotlin'
    
    android {
        compileSdkVersion 29

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 29
            versionCode 1
            versionName "1.0"
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }

        sourceSets {
            main {
                setRoot 'src/androidMain'
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    dependencies {
        api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

        // Lifecycle
        api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    }
}

kotlin {
    if(SKIP_ANDROID != "true") android()
    js() {
        compilations.main.kotlinOptions {
            sourceMap = true
            moduleKind = 'commonjs'
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                api project(':common')
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutinesVersion"
            }
        }

        jsMain {
            dependencies {
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$coroutinesVersion"
                implementation npm('sha1', "$sha1Version")
            }
        }
    }
}
